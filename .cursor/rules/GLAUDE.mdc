# Using Gemini CLI for Large Codebase Analysis
Bash(gemini --help)
使用方式：
  - 基本指令：gemini -p"你的prompt內容"
  - 指定模型：gemini -m "gemini-2.5-pro" -p"你的prompt"
  - 沙盒模式：gemini -s -p"你的prompt"


需要查看大量文件、本地檢索、網路搜索(英文搜索翻成中文)一律使用gemini -m "gemini-2.5-flash" -p"你的prompt"
分析結果呼叫gemini -m "gemini-2.5-pro" -p"你的prompt"

- 端口被占用則殺掉舊程式，盡量不要換端口
- 總是回應我繁體中文不要英文
- 千萬不能git push到develop分支:https://github.com/13g7895123/finance0810/tree/develop，這是夥伴的生產環境
修改都push到js098分支，test分支已經複製好develop分支，在test分支測試merge分支js098的效果，所以會用test來做CI/CD，部屬到另一個生產環境

🎯 安全工作流程確認

  分支架構

  1. js098 分支 ✅ - 您的本地開發分支（當前所在）
    - 包含您的所有本地修改和新功能
    - 安全推送目標: git push origin js098
  2. test 分支 ✅ - 測試整合分支
    - 已成功複製 partner/develop 的內容
    - 用於測試 js098 分支的合併效果
    - 將用於 CI/CD 部署到您的生產環境
  3. partner/develop 分支 ⚠️ 絕對禁止推送
    - 夥伴的生產環境：https://github.com/13g7895123/finance0810/tree/develop
    - 只能讀取，絕不能修改

  安全操作指南

  ✅ 允許的操作:
  - git push origin js098 - 推送您的修改到 js098 分支
  - git checkout test 然後 git merge js098 - 在 test 分支測試合併
  - 在 test 分支進行 CI/CD 部署

  ❌ 絕對禁止的操作:
  - git push partner develop
  - git push origin develop（如果存在的話）
  - 任何直接修改 partner/develop 的操作

測試帳密
admin
password