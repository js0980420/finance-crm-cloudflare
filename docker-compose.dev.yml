# Docker Compose override for development environment
# This file uses volumes to mount local code for hot-reload development

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    volumes:
      # Mount frontend source code for hot-reload
      - ./frontend:/app
      - /app/node_modules
      - /app/.nuxt
    environment:
      - NODE_ENV=development
      - NUXT_PUBLIC_API_BASE_URL=http://localhost:9221
    command: npm run dev
    ports:
      - "3301:3000"
    depends_on:
      - backend
    networks:
      - crm-network
      - npm_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      # Mount entire backend code for development
      - ./backend:/var/www/html
      # Exclude vendor directory to use container's dependencies
      - /var/www/html/vendor
      # Persistent storage
      - ./backend/storage:/var/www/html/storage
      - backend_bootstrap_cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:9221
      # Database configuration
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      # Redis configuration
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # Laravel configuration
      - APP_NAME=${APP_NAME}
      - APP_KEY=${APP_KEY}
      - JWT_SECRET=${JWT_SECRET}
      # Add CORS settings for local development
      - CORS_ALLOWED_ORIGINS=http://localhost:3301,http://localhost:3000,http://localhost:9221
    ports:
      - "9221:8000"
    depends_on:
      - mysql
      - redis
    networks:
      - crm-network
      - npm_network
    restart: unless-stopped
    command: |
      sh -c "
        # Ensure permissions are correct
        chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache
        chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

        # Clear Laravel caches for development
        php artisan config:clear
        php artisan route:clear
        php artisan cache:clear
        php artisan view:clear

        # Run migrations
        php artisan migrate --force

        # Start supervisord to run nginx and php-fpm
        exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
      "

  mysql:
    image: mysql:8.0
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password_2024
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - crm-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=root_password_2024
    depends_on:
      - mysql
    networks:
      - crm-network
      - npm_network
    restart: unless-stopped

networks:
  crm-network:
    driver: bridge
  npm_network:
    external: true

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_bootstrap_cache:
    driver: local